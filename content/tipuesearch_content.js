var tipuesearch = {"pages": [{'title': 'Old Stuff', 'text': '\n', 'tags': '', 'url': 'Old Stuff.html'}, {'title': 'About', 'text': '此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': 'About.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數. \n \n', 'tags': '', 'url': 'Develop.html'}, {'title': 'progress rate', 'text': '', 'tags': '', 'url': 'progress rate.html'}, {'title': 'w5', 'text': '哈哈一開始完全不明白呢，莫名其妙亂記一堆，還有感謝萬同學提供的照片 \n \n', 'tags': '', 'url': 'w5.html'}, {'title': 'w6', 'text': '這次記了不少，但要再整理一陣子，主要是名詞或指令不熟，但筆記稍微整理了一下。 \n 重點是稍微理解GitHub的運作了，就是打包帶著走，隨時修，隨時看，有網路了再上傳的感覺吧? \n \n', 'tags': '', 'url': 'w6.html'}, {'title': 'w7', 'text': '喔喔喔喔喔! \n 雖然上課的時候沒有做好但回家之後用筆電成功了! 筆記整理後大概如下: \n 1 建立一個倉儲(公開) \n 2 Setting中設為master branch \n 3 clone 網址到隨身碟( https://127.0.0.1:9443 這種，上一步產生的) \n *網站有了，增加內容 \n 4再資料夾(tmp)中建(wcmj2020) \n 5 git clone 這個網址 \n \n 6 cd wcmj2020\xa0 \n 7 git submodule add  https://github.com/mdecourse/cmsimde.git \xa0cmsimde \n 8到資料夾，找到up_dir，把內容Ctrl A到wcmj2020 \n (第9步起就是更改網頁) \n 9 python wsgi.py (啟動python之術!!!) \n 10然後複製因為前一步產生的新網址，Ctrl C到古歌看看 \n 11修改後一定要記得generate page \n (回到cmd) \n 12 cd.. \n 13 git add . (add和點點中間一定要記得空白) \n 14 git commit -m "你要附註的東西" \n 15 git push \n --------喔喔喔喔喔喔打完了!!! \n 附上一張肝了十分鐘的心情圖 \n \n \n', 'tags': '', 'url': 'w7.html'}, {'title': 'w8', 'text': '結果原來一開始就忘記下載wcm2020了，難怪path那麼複雜。 \n 結果不小心把筆電忘在電腦教室了，雖然很驚險，但因大禍賺到的小福利是， \n 可以直接在家用別的電腦測試新裝的工具包， \n 既然我現在在打這段，應該表示這是成功的。', 'tags': '', 'url': 'w8.html'}]};